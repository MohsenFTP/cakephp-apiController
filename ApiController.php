<?php

namespace App\Controller;

use App\Controller\AppController;
use App\Model\Entity\Contact;
use Cake\Datasource\ConnectionManager;
use Cake\Event\Event;
//use Cake\Mailer\Email;
use Cake\ORM\TableRegistry;
use Cake\Routing\Router;

/**
 * Api Controller
 *
 * @property \App\Model\Table\PagesTable $Pages
 *
 * @method \App\Model\Entity\Page[] paginate($object = null, array $settings = [])
 */
class ApiController extends AppController
{
    public $_result;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow();
        $this->loadComponent('RequestHandler');
        $this->_result = (object)[
            'status'=>false,
            'message' => '',
            'data' => []
            ];
        $this->autoRender = false;
        $this->response->type('json');

    }

    public function getAllPages()
    {
        $this->_result->status = true;

        $pages = TableRegistry::get('Pages')
            ->find('all',[
                'fields'    => ['id','url','title','updated_at']
            ])
            ->all();


        $this->_result->data = [
            'pages' => $pages
        ];
    }

    public function getPages()
    {
        $page_list = json_decode($this->request->query['page_list']);
        if(empty($page_list) || !is_array($page_list))
        {
            $this->_result->message = 'input variables error';
            return;
        }

        $this->_result->status = true;

        $pages = TableRegistry::get('Pages')
            ->find('all')
            ->where(['id IN'    => $page_list ])
            ->all();

        $this->_result->data = [
            'pages' => $pages
        ];
    }


    public function afterFilter(Event $event)
    {

        $json = json_encode($this->_result);
        $this->response->body($json);
        return parent::afterFilter($event); // TODO: Change the autogenerated stub
    }
}
